---
  layout: post
  title: Sorting Algorithms
  categories: csp
---

<p>Sorting is a very important area of study in computer science. As we saw in the previous lesson on Search, it is much more efficient to search a collection if its elements are in order. Sorting is the process of putting objects in order. Sorting algorithms have been studied extensively by computer scientists.</p>
<p><strong>Bubble Sort</strong><br>
One of simplest sorting algorithms is the bubble sort. Here's a video that demonstrates a version of the bubble sort on a collection of 13 playing cards. As you watch it, see if you can discover the algorithm. <br>
<a href="https://www.youtube.com/watch?v=f6bGSRYYVwo" target="_blank">Bubble Sort</a>
<pre><code>
To Bubble Sort a deck of N cards:
Place the unsorted deck, face down, in the right hand pile.
Repeat N times
    Put the top card of the right pile in your hand.
    Repeat until there are no more cards in the right pile.
        If the card in your hand > the top card on the right pile
            Place top card on the left pile.
        Else
            Place the hand card on the left pile.
    When the pass if finished, put the card left in your hand on the sorted pile.
    Move the left pile to the right pile.
</code></pre>
Bubble sort is an example of a comparison sort. It repeatedly compares two cards, placing the smaller one on the left pile. The bubble sort is so-called because on each pass through the data, the highest value "bubbles" to the top. For example, in the video, after the first pass, the Ace is placed on the sorted pile. On the second pass, a Queen is placed on the sorted pile. And so on.
</p>
<p><strong>Merge Sort</strong><br>
Merge sort is another comparison sorting algorithm, so called because it merges the cards into ever larger piles of cards.<br>
<a href="https://www.youtube.com/watch?v=OW3Be5CvYgA" target="_blank">Merge Sort</a>
<pre><code>
To Merge Sort a deck of N cards:
Divide the cards into N piles containing one card each.
Repeat until there is 1 pile containing all N cards:
    Merge adjacent piles into new piles that are twice as big.
</code></pre>
Merge sort starts with the cards in piles of 1 card each. Then on each pass, it merges them into piles of 2 cards, then 4 cards, then 8 cards, and so on, until all the cards are merged into one sorted pile. You probably also noticed that it was quite a bit faster than bubble sort.<br>
As you can see, Merge sort, like binary search, is another example of a divide and conquer approach to solving the problem, so-called, because it breaks the big problem into smaller problems and works on the smaller problems. In this case, the deck is divided into piles of 1 card each before merging the piles.
</p>
<p><strong>Bucket Sort</strong><br>
Not all sorts are comparison sorts. One example of a non-comparison sort, is the bucket sort, which uses some feature of the values being sorted to place them into distinct buckets. The buckets are then combined together.

In this video, the buckets are the values of the cards -- i.e., 2, 3, Jack, Ace, and so on.<br>
<a href="https://www.youtube.com/watch?v=LroZPmBGwDY" target="_blank">Bucket Sort</a>

<pre><code>
To Bucket Sort a deck of N cards:
1. For each card in the deck, put it into the bucket indicated by its rank.
2. Starting with the lowest numbered bucket, collect all the cards together.
</code></pre>
Bucket sort does not compare one card with another. Rather, it looks at the card's value and places it into the appropriate bucket. Once all the cards are in their buckets, they are collected together in order. This sort is the fastest of the three examples we've considered.<br>
Bucket sort is actually an example of a more general non-comparison sort called radix. The word radix is another word for base and the original idea behind radix sorting is to sort numbers by their digits.
</p>
<p>
Create a page named <strong>Reflection 20</strong> under the Reflections category of your portfolio and answer the following questions:
</p>
<ol>
<li>
Bubble and Merge Sort are referred to as comparison sorts because the values of the two datum are compared during each step. Why are the radix and bucket sort not comparison sorts?
</li>
<li>Which sort do you think would be the fastest if you had to sort more than one deck of cards? Why?</li>
</ol>